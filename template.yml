AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members

Globals:
  Function:
    Environment:
      Variables:
        PAYMENT_REQUESTS_TABLE_NAME: !Ref PaymentRequestsTable
        COMPANY_NAME: Payment Driver
        SENDER_EMAIL: Payment Driver <payments@example.com>
        BASE_URL: http://example.com
        REGION: us-east-1

Resources:

  PaymentRequestsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
        -
          AttributeName: "created_at"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
        -
          AttributeName: "created_at"
          KeyType: "RANGE"

  Home:
    Type: AWS::Serverless::Function
    Properties:
      Handler: home.index
      Runtime: nodejs8.10
      Policies: AmazonDynamoDBFullAccess
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get

  Login:
    Type: AWS::Serverless::Function
    Properties:
      Handler: home.login
      Runtime: nodejs8.10
      Policies: AmazonDynamoDBFullAccess
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /login
            Method: post

  Logout:
    Type: AWS::Serverless::Function
    Properties:
      Handler: home.logout
      Runtime: nodejs8.10
      Policies: AmazonDynamoDBFullAccess
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /logout
            Method: get

  PaymentRequests:
    Type: AWS::Serverless::Function
    Properties:
      Handler: payment-requests.index
      Runtime: nodejs8.10
      Policies: AmazonDynamoDBFullAccess
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /payment-requests
            Method: get

  PaymentRequestsNew:
    Type: AWS::Serverless::Function
    Properties:
      Handler: payment-requests.new
      Runtime: nodejs8.10
      Policies: AmazonDynamoDBFullAccess
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /payment-requests-new
            Method: get

  PostPaymentRequest:
    Type: AWS::Serverless::Function
    Properties:
      Handler: payment-requests.post
      Runtime: nodejs8.10
      Policies: AmazonDynamoDBFullAccess
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /payment-requests
            Method: post

  ResendPaymentRequest:
    Type: AWS::Serverless::Function
    Properties:
      Handler: payment-requests.resend
      Runtime: nodejs8.10
      Policies: AmazonDynamoDBFullAccess
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /payment-requests-resend
            Method: get

  PaymentForm:
    Type: AWS::Serverless::Function
    Properties:
      Handler: payments.get
      Runtime: nodejs8.10
      Policies: AmazonDynamoDBFullAccess
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /payments
            Method: get

  ProcessPayment:
    Type: AWS::Serverless::Function
    Properties:
      Handler: payments.post
      Runtime: nodejs8.10
      Policies: AmazonDynamoDBFullAccess
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /payments
            Method: post